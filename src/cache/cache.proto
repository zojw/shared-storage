// Copyright 2022 The Engula Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package engula.storage.v1.cache;

service BucketService {
  rpc CreateBucket(CreateBucketRequest) returns (CreateBucketResponse) {}

  rpc DeleteBucket(DeleteBucketRequest) returns (DeleteBucketResponse) {}

  rpc DeleteBlob(DeleteBlobRequest) returns (DeleteBlobResponse) {}

  rpc ListBuckets(ListBucketsRequest) returns (ListBucketsResponse) {}

  rpc ListBlobs(ListBlobsRequest) returns (ListBlobsResponse) {}
}

service CacheNodeService {
  rpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse);
}

message CreateBucketRequest { string bucket = 1; }

message CreateBucketResponse {}

message DeleteBucketRequest { string bucket = 1; }

message DeleteBucketResponse {}

message DeleteBlobRequest { string bucket = 1; string blob = 2; }

message DeleteBlobResponse {}

message ListBucketsRequest {}

message ListBucketsResponse { repeated string buckets = 1; }

message ListBlobsRequest { string bucket = 1; }

message ListBlobsResponse { repeated string blobs = 1; }

message HeartbeatRequest {
  uint32 server_id = 1;
  uint64 current_seq = 2;
  uint64 last_seq = 3;
}

message HeartbeatResponse {
  uint64 current_seq = 1;
  Status status = 2;
}

message Status {
  CacheEvent cache_event = 1;
}

message CacheEvent {
  enum EventType {
		Full = 0;
		Increment = 1;
	}
  EventType typ = 1;
  repeated string bucket_added = 2;
  repeated string bucket_delete = 3;
  repeated BucketBlob blob_added = 4;
  repeated BucketBlob blob_delete = 5;
}

message BucketBlob {
  string bucket = 1;
  string blob = 2;
}
